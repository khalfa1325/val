{"ast":null,"code":"import { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport createUserReducer from '../featchers/UserOspita/userSlice';\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst rootReducer = combineReducers({\n  user: createUserReducer\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat()\n});\nsetupListeners(store.dispatch);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/store/store.js"],"names":["combineReducers","configureStore","getDefaultMiddleware","setupListeners","persistStore","persistReducer","storage","createUserReducer","persistConfig","key","rootReducer","user","persistedReducer","store","reducer","middleware","serializableCheck","concat","dispatch","persistor"],"mappings":"AACA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,kBAAtE;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AAEA,OAAOC,iBAAP,MAA8B,mCAA9B;AAEA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA;AAFkB,CAAtB;AAIA,MAAMI,WAAW,GAAGV,eAAe,CAAC;AAEhCW,EAAAA,IAAI,EAACJ;AAF2B,CAAD,CAAnC;AAIA,MAAMK,gBAAgB,GAAGP,cAAc,CAACG,aAAD,EAAgBE,WAAhB,CAAvC;AAEA,OAAO,MAAMG,KAAK,GAAGZ,cAAc,CAAC;AAEhCa,EAAAA,OAAO,EAAEF,gBAFuB;AAIhCG,EAAAA,UAAU,EAAGb,oBAAD,IACRA,oBAAoB,CAAC;AAAEc,IAAAA,iBAAiB,EAAE;AAArB,GAAD,CAApB,CAAmDC,MAAnD;AAL4B,CAAD,CAA5B;AAYPd,cAAc,CAACU,KAAK,CAACK,QAAP,CAAd;AAGA,OAAO,MAAMC,SAAS,GAAGf,YAAY,CAACS,KAAD,CAA9B","sourcesContent":["\nimport { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\n\nimport createUserReducer from '../featchers/UserOspita/userSlice'\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n}\nconst rootReducer = combineReducers({\n\n    user:createUserReducer\n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n\n    reducer: persistedReducer,\n\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(\n\n        ),\n\n\n});\n\nsetupListeners(store.dispatch)\n\n\nexport const persistor = persistStore(store)\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}