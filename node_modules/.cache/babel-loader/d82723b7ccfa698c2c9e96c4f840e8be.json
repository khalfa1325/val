{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { AllFunction } from \"./url\";\nimport axios, { AxiosError } from 'axios';\nconst initialState = {\n  user: {},\n  razagazzo: {},\n  status: \"idle\",\n  error: null\n};\nexport const createUserOspita = createAsyncThunk('user/register', async data => {\n  const responce = await AllFunction.register(data);\n  return responce;\n});\nexport const loginUser = createAsyncThunk('user/login', async _ref => {\n  let {\n    data,\n    viewport\n  } = _ref;\n  const responce = await AllFunction.login(data, viewport);\n  return responce;\n});\nexport const loginRagazo = createAsyncThunk('user/loginRagazzo', async (_ref2, _ref3, _, _ref4) => {\n  let {\n    data,\n    viewport\n  } = _ref2;\n  let {\n    getState\n  } = _ref3;\n  let {\n    rejectWithValue\n  } = _ref4;\n\n  try {\n    const key = getState().user.razagazzo.keySecret;\n    console.log(key);\n    console.log(data);\n    const responce = await AllFunction.loginRagazzo(data, viewport, key);\n    return responce;\n  } catch (error) {\n    console.log(error);\n\n    if (axios.isAxiosError(error)) {\n      return rejectWithValue(error);\n    }\n\n    throw error;\n  }\n});\nexport const registerRagazo = createAsyncThunk('user/RegisterRagazzo', async data => {\n  console.log(data);\n  const response = await AllFunction.RegisterRagazzo(data);\n  return response;\n});\nconst createUser = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [createUserOspita.pending]: (state, action) => {// state.user=action.payload\n    },\n    [createUserOspita.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [createUserOspita.rejected]: (state, action) => {// state.user=action.payload\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [loginRagazo.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [registerRagazo.fulfilled]: (state, action) => {\n      state.status = \"succeeded\";\n      state.razagazzo = action.payload;\n    },\n    [registerRagazo.rejected]: (state, action) => {\n      state.status = 'failed';\n      state.error = action.payload;\n    }\n  }\n});\nexport const {} = createUser.actions;\nexport const create = state => state.user.user;\nexport const registerR = state => state.user.razagazzo;\nexport const errorR = state => state.user.error;\nexport default createUser.reducer;","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/featchers/UserOspita/userSlice.js"],"names":["createAsyncThunk","createSlice","AllFunction","axios","AxiosError","initialState","user","razagazzo","status","error","createUserOspita","data","responce","register","loginUser","viewport","login","loginRagazo","_","getState","rejectWithValue","key","keySecret","console","log","loginRagazzo","isAxiosError","registerRagazo","response","RegisterRagazzo","createUser","name","reducers","extraReducers","pending","state","action","fulfilled","payload","rejected","actions","create","registerR","errorR","reducer"],"mappings":"AAAA,SAASA,gBAAT,EAA2BC,WAA3B,QAA8C,kBAA9C;AACA,SAASC,WAAT,QAA4B,OAA5B;AACA,OAAOC,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAE,EADW;AAEjBC,EAAAA,SAAS,EAAC,EAFO;AAGjBC,EAAAA,MAAM,EAAE,MAHS;AAIjBC,EAAAA,KAAK,EAAE;AAJU,CAArB;AAOA,OAAO,MAAMC,gBAAgB,GAAGV,gBAAgB,CAC5C,eAD4C,EAE5C,MAAOW,IAAP,IAAgB;AACZ,QAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACW,QAAZ,CAAqBF,IAArB,CAAvB;AACA,SAAOC,QAAP;AACH,CAL2C,CAAzC;AAOP,OAAO,MAAME,SAAS,GAAGd,gBAAgB,CACrC,YADqC,EAErC,cAA8B;AAAA,MAAvB;AAAEW,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAuB;AAE1B,QAAMH,QAAQ,GAAG,MAAMV,WAAW,CAACc,KAAZ,CAAkBL,IAAlB,EAAwBI,QAAxB,CAAvB;AACA,SAAOH,QAAP;AACH,CANoC,CAAlC;AASP,OAAO,MAAMK,WAAW,GAAGjB,gBAAgB,CACvC,mBADuC,EAEvC,qBAAqCkB,CAArC,YAAgE;AAAA,MAAzD;AAAEP,IAAAA,IAAF;AAAQI,IAAAA;AAAR,GAAyD;AAAA,MAAtC;AAACI,IAAAA;AAAD,GAAsC;AAAA,MAAxB;AAAEC,IAAAA;AAAF,GAAwB;;AAC5D,MAAI;AAEA,UAAMC,GAAG,GAACF,QAAQ,GAAGb,IAAX,CAAgBC,SAAhB,CAA0Be,SAApC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYH,GAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,UAAMC,QAAQ,GAAG,MAAMV,WAAW,CAACuB,YAAZ,CAAyBd,IAAzB,EAA+BI,QAA/B,EAAwCM,GAAxC,CAAvB;AACA,WAAOT,QAAP;AACH,GAPD,CAOC,OAAMH,KAAN,EAAY;AACTc,IAAAA,OAAO,CAACC,GAAR,CAAYf,KAAZ;;AACA,QAAIN,KAAK,CAACuB,YAAN,CAAmBjB,KAAnB,CAAJ,EAA+B;AAC3B,aAAOW,eAAe,CAACX,KAAD,CAAtB;AACD;;AACD,UAAMA,KAAN;AACL;AAEJ,CAlBsC,CAApC;AAqBP,OAAO,MAAMkB,cAAc,GAAC3B,gBAAgB,CACxC,sBADwC,EAExC,MAAMW,IAAN,IAAa;AACTY,EAAAA,OAAO,CAACC,GAAR,CAAYb,IAAZ;AACA,QAAMiB,QAAQ,GAAC,MAAM1B,WAAW,CAAC2B,eAAZ,CAA4BlB,IAA5B,CAArB;AACA,SAAOiB,QAAP;AACH,CANuC,CAArC;AASN,MAAME,UAAU,GAAG7B,WAAW,CAAC;AAC5B8B,EAAAA,IAAI,EAAE,MADsB;AAE5B1B,EAAAA,YAF4B;AAG5B2B,EAAAA,QAAQ,EAAE,EAHkB;AAI5BC,EAAAA,aAAa,EAAE;AACX,KAACvB,gBAAgB,CAACwB,OAAlB,GAA4B,CAACC,KAAD,EAAQC,MAAR,KAAmB,CAC3C;AACH,KAHU;AAKX,KAAC1B,gBAAgB,CAAC2B,SAAlB,GAA8B,CAACF,KAAD,EAAQC,MAAR,KAAmB;AAC7CD,MAAAA,KAAK,CAAC7B,IAAN,GAAa8B,MAAM,CAACE,OAApB;AACH,KAPU;AASX,KAAC5B,gBAAgB,CAAC6B,QAAlB,GAA6B,CAACJ,KAAD,EAAQC,MAAR,KAAmB,CAC5C;AACH,KAXU;AAaX,KAACtB,SAAS,CAACuB,SAAX,GAAuB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACtCD,MAAAA,KAAK,CAAC7B,IAAN,GAAa8B,MAAM,CAACE,OAApB;AACH,KAfU;AAkBX,KAACrB,WAAW,CAACoB,SAAb,GAAyB,CAACF,KAAD,EAAQC,MAAR,KAAmB;AACxCD,MAAAA,KAAK,CAAC7B,IAAN,GAAa8B,MAAM,CAACE,OAApB;AACH,KApBU;AAuBX,KAACX,cAAc,CAACU,SAAhB,GAA2B,CAACF,KAAD,EAAOC,MAAP,KAAgB;AACvCD,MAAAA,KAAK,CAAC3B,MAAN,GAAe,WAAf;AACA2B,MAAAA,KAAK,CAAC5B,SAAN,GAAgB6B,MAAM,CAACE,OAAvB;AACH,KA1BU;AA2BX,KAACX,cAAc,CAACY,QAAhB,GAA0B,CAACJ,KAAD,EAAOC,MAAP,KAAgB;AACtCD,MAAAA,KAAK,CAAC3B,MAAN,GAAa,QAAb;AACA2B,MAAAA,KAAK,CAAC1B,KAAN,GAAY2B,MAAM,CAACE,OAAnB;AACH;AA9BU;AAJa,CAAD,CAA9B;AAwCD,OAAO,MAAM,KAAMR,UAAU,CAACU,OAAvB;AACP,OAAO,MAAMC,MAAM,GAAIN,KAAD,IAAWA,KAAK,CAAC7B,IAAN,CAAWA,IAArC;AACP,OAAO,MAAMoC,SAAS,GAAEP,KAAD,IAASA,KAAK,CAAC7B,IAAN,CAAWC,SAApC;AACP,OAAO,MAAMoC,MAAM,GAAER,KAAD,IAASA,KAAK,CAAC7B,IAAN,CAAWG,KAAjC;AACP,eAAeqB,UAAU,CAACc,OAA1B","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { AllFunction } from \"./url\";\nimport axios, { AxiosError } from 'axios';\n\nconst initialState = {\n    user: {},\n    razagazzo:{},\n    status: \"idle\",\n    error: null,\n}\n\nexport const createUserOspita = createAsyncThunk(\n    'user/register',\n    async (data) => {\n        const responce = await AllFunction.register(data)\n        return responce\n    }\n)\nexport const loginUser = createAsyncThunk(\n    'user/login',\n    async ({ data, viewport }) => {\n\n        const responce = await AllFunction.login(data, viewport)\n        return responce\n    }\n)\n\nexport const loginRagazo = createAsyncThunk(\n    'user/loginRagazzo',\n    async ({ data, viewport },{getState},_, { rejectWithValue }) => {\n        try {\n\n            const key=getState().user.razagazzo.keySecret\n            console.log(key)\n            console.log(data)\n            const responce = await AllFunction.loginRagazzo(data, viewport,key)\n            return responce\n        }catch(error){\n            console.log(error)\n            if (axios.isAxiosError(error)) {\n                return rejectWithValue(error);\n              }\n              throw error;\n        }\n\n    }\n)\n\nexport const registerRagazo=createAsyncThunk(\n    'user/RegisterRagazzo',\n    async(data)=>{\n        console.log(data)\n        const response=await AllFunction.RegisterRagazzo(data)\n        return response\n    }\n)\n\n const createUser = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [createUserOspita.pending]: (state, action) => {\n            // state.user=action.payload\n        },\n\n        [createUserOspita.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n        [createUserOspita.rejected]: (state, action) => {\n            // state.user=action.payload\n        },\n\n        [loginUser.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n\n        [loginRagazo.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n\n        [registerRagazo.fulfilled]:(state,action)=>{\n            state.status = \"succeeded\";\n            state.razagazzo=action.payload\n        },\n        [registerRagazo.rejected]:(state,action)=>{\n            state.status='failed'\n            state.error=action.payload\n        }\n    }\n\n\n})\n\nexport const { } = createUser.actions\nexport const create = (state) => state.user.user\nexport const registerR=(state)=>state.user.razagazzo\nexport const errorR=(state)=>state.user.error\nexport default createUser.reducer"]},"metadata":{},"sourceType":"module"}