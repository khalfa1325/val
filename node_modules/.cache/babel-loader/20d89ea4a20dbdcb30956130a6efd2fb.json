{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { AllFunction } from \"./url\";\nconst initialState = {\n  user: {},\n  razagazzo: {}\n};\nexport const createUserOspita = createAsyncThunk('user/register', async data => {\n  const responce = await AllFunction.register(data);\n  return responce;\n});\nexport const loginUser = createAsyncThunk('user/login', async _ref => {\n  let {\n    data,\n    viewport\n  } = _ref;\n  const responce = await AllFunction.login(data, viewport);\n  return responce;\n});\nexport const loginRagazo = createAsyncThunk('user/loginRagazzo', async (_ref2, getS) => {\n  let {\n    data,\n    viewport\n  } = _ref2;\n  const state = getState();\n  console.log(state);\n  console.log(data);\n  const responce = await AllFunction.loginRagazzo(data, viewport);\n  return responce;\n});\nexport const registerRagazo = createAsyncThunk('user/RegisterRagazzo', async data => {\n  console.log(data);\n  const response = await AllFunction.RegisterRagazzo(data);\n  return response;\n});\nconst createUser = createSlice({\n  name: \"user\",\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [createUserOspita.pending]: (state, action) => {// state.user=action.payload\n    },\n    [createUserOspita.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [createUserOspita.rejected]: (state, action) => {// state.user=action.payload\n    },\n    [loginUser.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [loginRagazo.fulfilled]: (state, action) => {\n      state.user = action.payload;\n    },\n    [registerRagazo.fulfilled]: (state, action) => {\n      state.razagazzo = action.payload;\n    }\n  }\n});\nexport const {} = createUser.actions;\nexport const create = state => state.user.user;\nexport const registerR = state => state.user.razagazzo;\nexport default createUser.reducer;","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/featchers/UserOspita/userSlice.js"],"names":["createAsyncThunk","createSlice","AllFunction","initialState","user","razagazzo","createUserOspita","data","responce","register","loginUser","viewport","login","loginRagazo","getS","state","getState","console","log","loginRagazzo","registerRagazo","response","RegisterRagazzo","createUser","name","reducers","extraReducers","pending","action","fulfilled","payload","rejected","actions","create","registerR","reducer"],"mappings":"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","sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport { AllFunction } from \"./url\";\n\n\nconst initialState = {\n    user: {},\n    razagazzo:{}\n}\n\nexport const createUserOspita = createAsyncThunk(\n    'user/register',\n    async (data) => {\n        const responce = await AllFunction.register(data)\n        return responce\n    }\n)\nexport const loginUser = createAsyncThunk(\n    'user/login',\n    async ({ data, viewport }) => {\n\n        const responce = await AllFunction.login(data, viewport)\n        return responce\n    }\n)\n\nexport const loginRagazo = createAsyncThunk(\n    'user/loginRagazzo',\n    async ({ data, viewport },getS) => {\n        const state=getState()\n        console.log(state)\n        console.log(data)\n        const responce = await AllFunction.loginRagazzo(data, viewport)\n        return responce\n\n    }\n)\n\nexport const registerRagazo=createAsyncThunk(\n    'user/RegisterRagazzo',\n    async(data)=>{\n        console.log(data)\n        const response=await AllFunction.RegisterRagazzo(data)\n        return response\n    }\n)\n\n const createUser = createSlice({\n    name: \"user\",\n    initialState,\n    reducers: {},\n    extraReducers: {\n        [createUserOspita.pending]: (state, action) => {\n            // state.user=action.payload\n        },\n\n        [createUserOspita.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n        [createUserOspita.rejected]: (state, action) => {\n            // state.user=action.payload\n        },\n\n        [loginUser.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n\n        [loginRagazo.fulfilled]: (state, action) => {\n            state.user = action.payload\n        },\n\n\n        [registerRagazo.fulfilled]:(state,action)=>{\n            state.razagazzo=action.payload\n        }\n    }\n\n\n})\n\nexport const { } = createUser.actions\nexport const create = (state) => state.user.user\nexport const registerR=(state)=>state.user.razagazzo\nexport default createUser.reducer"]},"metadata":{},"sourceType":"module"}