{"ast":null,"code":"'use strict';\n\nvar qs = require('querystring');\n\nvar https = require('https');\n\nvar once = require('once');\n\nvar processBody = function (body, cb) {\n  if (body.status !== 'OK') return cb();\n  cb(null, {\n    lat: body.location.lat,\n    lng: body.location.lng,\n    accuracy: body.accuracy\n  });\n};\n\nmodule.exports = function (towers, cb) {\n  cb = once(cb);\n  var wifi = (towers || []).slice(0, 20) // if the URL is too long, Google will repond with 411\n  .map(function (tower) {\n    var ss = 'signal' in tower ? tower.signal : tower.signal_level;\n    return qs.escape('mac:' + tower.mac + '|ssid:' + tower.ssid + '|ss:' + ss);\n  }).join('&wifi=');\n  if (wifi) wifi = '&wifi=' + wifi;\n  var opts = {\n    hostname: 'maps.googleapis.com',\n    method: 'POST',\n    path: '/maps/api/browserlocation/json?browser=firefox&sensor=true' + wifi\n  };\n  var req = https.request(opts, function (res) {\n    var buffers = [];\n    res.on('data', buffers.push.bind(buffers));\n    res.on('end', function () {\n      if (res.statusCode >= 300) return cb(new Error('Geocoding service returned unexpected status code: ' + res.statusCode));\n      var body = Buffer.concat(buffers);\n\n      try {\n        body = JSON.parse(body);\n      } catch (e) {\n        return cb(e);\n      }\n\n      processBody(body, cb);\n    });\n  });\n  req.on('error', cb);\n  req.on('close', function () {\n    cb(new Error('Connection to geocoding service closed unexpectedly'));\n  });\n  req.end();\n};","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/node_modules/geocode-wifi/index.js"],"names":["qs","require","https","once","processBody","body","cb","status","lat","location","lng","accuracy","module","exports","towers","wifi","slice","map","tower","ss","signal","signal_level","escape","mac","ssid","join","opts","hostname","method","path","req","request","res","buffers","on","push","bind","statusCode","Error","Buffer","concat","JSON","parse","e","end"],"mappings":"AAAA;;AAEA,IAAIA,EAAE,GAAGC,OAAO,CAAC,aAAD,CAAhB;;AACA,IAAIC,KAAK,GAAGD,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIE,IAAI,GAAGF,OAAO,CAAC,MAAD,CAAlB;;AAEA,IAAIG,WAAW,GAAG,UAAUC,IAAV,EAAgBC,EAAhB,EAAoB;AACpC,MAAID,IAAI,CAACE,MAAL,KAAgB,IAApB,EAA0B,OAAOD,EAAE,EAAT;AAE1BA,EAAAA,EAAE,CAAC,IAAD,EAAO;AACPE,IAAAA,GAAG,EAAEH,IAAI,CAACI,QAAL,CAAcD,GADZ;AAEPE,IAAAA,GAAG,EAAEL,IAAI,CAACI,QAAL,CAAcC,GAFZ;AAGPC,IAAAA,QAAQ,EAAEN,IAAI,CAACM;AAHR,GAAP,CAAF;AAKD,CARD;;AAUAC,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAkBR,EAAlB,EAAsB;AACrCA,EAAAA,EAAE,GAAGH,IAAI,CAACG,EAAD,CAAT;AAEA,MAAIS,IAAI,GAAG,CAACD,MAAM,IAAI,EAAX,EACRE,KADQ,CACF,CADE,EACC,EADD,EACK;AADL,GAERC,GAFQ,CAEJ,UAAUC,KAAV,EAAiB;AACpB,QAAIC,EAAE,GAAG,YAAYD,KAAZ,GAAoBA,KAAK,CAACE,MAA1B,GAAmCF,KAAK,CAACG,YAAlD;AACA,WAAOrB,EAAE,CAACsB,MAAH,CAAU,SAASJ,KAAK,CAACK,GAAf,GAAqB,QAArB,GAAgCL,KAAK,CAACM,IAAtC,GAA6C,MAA7C,GAAsDL,EAAhE,CAAP;AACD,GALQ,EAMRM,IANQ,CAMH,QANG,CAAX;AAQA,MAAIV,IAAJ,EAAUA,IAAI,GAAG,WAAWA,IAAlB;AAEV,MAAIW,IAAI,GAAG;AACTC,IAAAA,QAAQ,EAAE,qBADD;AAETC,IAAAA,MAAM,EAAE,MAFC;AAGTC,IAAAA,IAAI,EAAE,+DAA+Dd;AAH5D,GAAX;AAMA,MAAIe,GAAG,GAAG5B,KAAK,CAAC6B,OAAN,CAAcL,IAAd,EAAoB,UAAUM,GAAV,EAAe;AAC3C,QAAIC,OAAO,GAAG,EAAd;AACAD,IAAAA,GAAG,CAACE,EAAJ,CAAO,MAAP,EAAeD,OAAO,CAACE,IAAR,CAAaC,IAAb,CAAkBH,OAAlB,CAAf;AACAD,IAAAA,GAAG,CAACE,EAAJ,CAAO,KAAP,EAAc,YAAY;AACxB,UAAIF,GAAG,CAACK,UAAJ,IAAkB,GAAtB,EAA2B,OAAO/B,EAAE,CAAC,IAAIgC,KAAJ,CAAU,wDAAwDN,GAAG,CAACK,UAAtE,CAAD,CAAT;AAE3B,UAAIhC,IAAI,GAAGkC,MAAM,CAACC,MAAP,CAAcP,OAAd,CAAX;;AAEA,UAAI;AACF5B,QAAAA,IAAI,GAAGoC,IAAI,CAACC,KAAL,CAAWrC,IAAX,CAAP;AACD,OAFD,CAEE,OAAOsC,CAAP,EAAU;AACV,eAAOrC,EAAE,CAACqC,CAAD,CAAT;AACD;;AAEDvC,MAAAA,WAAW,CAACC,IAAD,EAAOC,EAAP,CAAX;AACD,KAZD;AAaD,GAhBS,CAAV;AAiBAwB,EAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB5B,EAAhB;AACAwB,EAAAA,GAAG,CAACI,EAAJ,CAAO,OAAP,EAAgB,YAAY;AAC1B5B,IAAAA,EAAE,CAAC,IAAIgC,KAAJ,CAAU,qDAAV,CAAD,CAAF;AACD,GAFD;AAGAR,EAAAA,GAAG,CAACc,GAAJ;AACD,CAzCD","sourcesContent":["'use strict'\n\nvar qs = require('querystring')\nvar https = require('https')\nvar once = require('once')\n\nvar processBody = function (body, cb) {\n  if (body.status !== 'OK') return cb()\n\n  cb(null, {\n    lat: body.location.lat,\n    lng: body.location.lng,\n    accuracy: body.accuracy\n  })\n}\n\nmodule.exports = function (towers, cb) {\n  cb = once(cb)\n\n  var wifi = (towers || [])\n    .slice(0, 20) // if the URL is too long, Google will repond with 411\n    .map(function (tower) {\n      var ss = 'signal' in tower ? tower.signal : tower.signal_level\n      return qs.escape('mac:' + tower.mac + '|ssid:' + tower.ssid + '|ss:' + ss)\n    })\n    .join('&wifi=')\n\n  if (wifi) wifi = '&wifi=' + wifi\n\n  var opts = {\n    hostname: 'maps.googleapis.com',\n    method: 'POST',\n    path: '/maps/api/browserlocation/json?browser=firefox&sensor=true' + wifi\n  }\n\n  var req = https.request(opts, function (res) {\n    var buffers = []\n    res.on('data', buffers.push.bind(buffers))\n    res.on('end', function () {\n      if (res.statusCode >= 300) return cb(new Error('Geocoding service returned unexpected status code: ' + res.statusCode))\n\n      var body = Buffer.concat(buffers)\n\n      try {\n        body = JSON.parse(body)\n      } catch (e) {\n        return cb(e)\n      }\n\n      processBody(body, cb)\n    })\n  })\n  req.on('error', cb)\n  req.on('close', function () {\n    cb(new Error('Connection to geocoding service closed unexpectedly'))\n  })\n  req.end()\n}\n"]},"metadata":{},"sourceType":"script"}