{"ast":null,"code":"var _jsxFileName = \"/home/radhouene/Bureau/admin/folder/volt-react-dashboard/src/components/Navbar.js\";\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell, faCog, faEnvelopeOpen, faSearch, faSignOutAlt, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { Row, Col, Nav, Form, Image, Navbar, Dropdown, Container, ListGroup, InputGroup } from '@themesberg/react-bootstrap';\nimport NOTIFICATIONS_DATA from \"../data/notifications\";\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\nexport default (props => {\n  const [notifications, setNotifications] = useState(NOTIFICATIONS_DATA);\n  const areNotificationsRead = notifications.reduce((acc, notif) => acc && notif.read, true);\n\n  const markNotificationsAsRead = () => {\n    setTimeout(() => {\n      setNotifications(notifications.map(n => ({ ...n,\n        read: true\n      })));\n    }, 300);\n  };\n\n  const Notification = props => {\n    const {\n      link,\n      sender,\n      image,\n      time,\n      message,\n      read = false\n    } = props;\n    const readClassName = read ? \"\" : \"text-danger\";\n    return /*#__PURE__*/React.createElement(React.Fragment, null) // <ListGroup.Item action href={link} className=\"border-bottom border-light\">\n    //   <Row className=\"align-items-center\">\n    //     <Col className=\"col-auto\">\n    //       <Image src={image} className=\"user-avatar lg-avatar rounded-circle\" />\n    //     </Col>\n    //     <Col className=\"ps-0 ms--2\">\n    //       <div className=\"d-flex justify-content-between align-items-center\">\n    //         <div>\n    //           <h4 className=\"h6 mb-0 text-small\">{sender}</h4>\n    //         </div>\n    //         <div className=\"text-end\">\n    //           <small className={readClassName}>{time}</small>\n    //         </div>\n    //       </div>\n    //       <p className=\"font-small mt-1 mb-0\">{message}</p>\n    //     </Col>\n    //   </Row>\n    // </ListGroup.Item>\n    ;\n  };\n\n  return /*#__PURE__*/React.createElement(Navbar, {\n    variant: \"dark\",\n    expanded: true,\n    className: \"ps-0 pe-2 pb-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  });\n});","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/volt-react-dashboard/src/components/Navbar.js"],"names":["React","useState","FontAwesomeIcon","faBell","faCog","faEnvelopeOpen","faSearch","faSignOutAlt","faUserShield","faUserCircle","Row","Col","Nav","Form","Image","Navbar","Dropdown","Container","ListGroup","InputGroup","NOTIFICATIONS_DATA","Profile3","props","notifications","setNotifications","areNotificationsRead","reduce","acc","notif","read","markNotificationsAsRead","setTimeout","map","n","Notification","link","sender","image","time","message","readClassName"],"mappings":";AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,cAAxB,EAAwCC,QAAxC,EAAkDC,YAAlD,EAAgEC,YAAhE,QAAoF,mCAApF;AACA,SAASC,YAAT,QAA6B,qCAA7B;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,GAAnB,EAAwBC,IAAxB,EAA8BC,KAA9B,EAAqCC,MAArC,EAA6CC,QAA7C,EAAuDC,SAAvD,EAAkEC,SAAlE,EAA6EC,UAA7E,QAA+F,6BAA/F;AAEA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,OAAOC,QAAP,MAAqB,0CAArB;AAGA,gBAAgBC,KAAD,IAAW;AACxB,QAAM,CAACC,aAAD,EAAgBC,gBAAhB,IAAoCvB,QAAQ,CAACmB,kBAAD,CAAlD;AACA,QAAMK,oBAAoB,GAAGF,aAAa,CAACG,MAAd,CAAqB,CAACC,GAAD,EAAMC,KAAN,KAAgBD,GAAG,IAAIC,KAAK,CAACC,IAAlD,EAAwD,IAAxD,CAA7B;;AAEA,QAAMC,uBAAuB,GAAG,MAAM;AACpCC,IAAAA,UAAU,CAAC,MAAM;AACfP,MAAAA,gBAAgB,CAACD,aAAa,CAACS,GAAd,CAAkBC,CAAC,KAAK,EAAE,GAAGA,CAAL;AAAQJ,QAAAA,IAAI,EAAE;AAAd,OAAL,CAAnB,CAAD,CAAhB;AACD,KAFS,EAEP,GAFO,CAAV;AAGD,GAJD;;AAOA,QAAMK,YAAY,GAAIZ,KAAD,IAAW;AAC9B,UAAM;AAAEa,MAAAA,IAAF;AAAQC,MAAAA,MAAR;AAAgBC,MAAAA,KAAhB;AAAuBC,MAAAA,IAAvB;AAA6BC,MAAAA,OAA7B;AAAsCV,MAAAA,IAAI,GAAG;AAA7C,QAAuDP,KAA7D;AACA,UAAMkB,aAAa,GAAGX,IAAI,GAAG,EAAH,GAAQ,aAAlC;AAEA,wBACE,yCADF,CAEE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBF;AAqBD,GAzBD;;AA2BA,sBACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,MAAhB;AAAuB,IAAA,QAAQ,MAA/B;AAAgC,IAAA,SAAS,EAAC,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAwED,CA9GD","sourcesContent":["\nimport React, { useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faBell, faCog, faEnvelopeOpen, faSearch, faSignOutAlt, faUserShield } from \"@fortawesome/free-solid-svg-icons\";\nimport { faUserCircle } from \"@fortawesome/free-regular-svg-icons\";\nimport { Row, Col, Nav, Form, Image, Navbar, Dropdown, Container, ListGroup, InputGroup } from '@themesberg/react-bootstrap';\n\nimport NOTIFICATIONS_DATA from \"../data/notifications\";\nimport Profile3 from \"../assets/img/team/profile-picture-3.jpg\";\n\n\nexport default (props) => {\n  const [notifications, setNotifications] = useState(NOTIFICATIONS_DATA);\n  const areNotificationsRead = notifications.reduce((acc, notif) => acc && notif.read, true);\n\n  const markNotificationsAsRead = () => {\n    setTimeout(() => {\n      setNotifications(notifications.map(n => ({ ...n, read: true })));\n    }, 300);\n  };\n\n\n  const Notification = (props) => {\n    const { link, sender, image, time, message, read = false } = props;\n    const readClassName = read ? \"\" : \"text-danger\";\n\n    return (\n      <></>\n      // <ListGroup.Item action href={link} className=\"border-bottom border-light\">\n      //   <Row className=\"align-items-center\">\n      //     <Col className=\"col-auto\">\n      //       <Image src={image} className=\"user-avatar lg-avatar rounded-circle\" />\n      //     </Col>\n      //     <Col className=\"ps-0 ms--2\">\n      //       <div className=\"d-flex justify-content-between align-items-center\">\n      //         <div>\n      //           <h4 className=\"h6 mb-0 text-small\">{sender}</h4>\n      //         </div>\n      //         <div className=\"text-end\">\n      //           <small className={readClassName}>{time}</small>\n      //         </div>\n      //       </div>\n      //       <p className=\"font-small mt-1 mb-0\">{message}</p>\n      //     </Col>\n      //   </Row>\n      // </ListGroup.Item>\n    );\n  };\n\n  return (\n    <Navbar variant=\"dark\" expanded className=\"ps-0 pe-2 pb-0\">\n      {/* <Container fluid className=\"px-0\">\n        <div className=\"d-flex justify-content-between w-100\">\n          <div className=\"d-flex align-items-center\">\n            <Form className=\"navbar-search\">\n              <Form.Group id=\"topbarSearch\">\n                <InputGroup className=\"input-group-merge search-bar\">\n                  <InputGroup.Text><FontAwesomeIcon icon={faSearch} /></InputGroup.Text>\n                  <Form.Control type=\"text\" placeholder=\"Search\" />\n                </InputGroup>\n              </Form.Group>\n            </Form>\n          </div>\n          <Nav className=\"align-items-center\">\n            <Dropdown as={Nav.Item} onToggle={markNotificationsAsRead} >\n              <Dropdown.Toggle as={Nav.Link} className=\"text-dark icon-notifications me-lg-3\">\n                <span className=\"icon icon-sm\">\n                  <FontAwesomeIcon icon={faBell} className=\"bell-shake\" />\n                  {areNotificationsRead ? null : <span className=\"icon-badge rounded-circle unread-notifications\" />}\n                </span>\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"dashboard-dropdown notifications-dropdown dropdown-menu-lg dropdown-menu-center mt-2 py-0\">\n                <ListGroup className=\"list-group-flush\">\n                  <Nav.Link href=\"#\" className=\"text-center text-primary fw-bold border-bottom border-light py-3\">\n                    Notifications\n                  </Nav.Link>\n\n                  {notifications.map(n => <Notification key={`notification-${n.id}`} {...n} />)}\n\n                  <Dropdown.Item className=\"text-center text-primary fw-bold py-3\">\n                    View all\n                  </Dropdown.Item>\n                </ListGroup>\n              </Dropdown.Menu>\n            </Dropdown>\n\n            <Dropdown as={Nav.Item}>\n              <Dropdown.Toggle as={Nav.Link} className=\"pt-1 px-0\">\n                <div className=\"media d-flex align-items-center\">\n                  <Image src={Profile3} className=\"user-avatar md-avatar rounded-circle\" />\n                  <div className=\"media-body ms-2 text-dark align-items-center d-none d-lg-block\">\n                    <span className=\"mb-0 font-small fw-bold\">Bonnie Green</span>\n                  </div>\n                </div>\n              </Dropdown.Toggle>\n              <Dropdown.Menu className=\"user-dropdown dropdown-menu-right mt-2\">\n                <Dropdown.Item className=\"fw-bold\">\n                  <FontAwesomeIcon icon={faUserCircle} className=\"me-2\" /> My Profile\n                </Dropdown.Item>\n                <Dropdown.Item className=\"fw-bold\">\n                  <FontAwesomeIcon icon={faCog} className=\"me-2\" /> Settings\n                </Dropdown.Item>\n                <Dropdown.Item className=\"fw-bold\">\n                  <FontAwesomeIcon icon={faEnvelopeOpen} className=\"me-2\" /> Messages\n                </Dropdown.Item>\n                <Dropdown.Item className=\"fw-bold\">\n                  <FontAwesomeIcon icon={faUserShield} className=\"me-2\" /> Support\n                </Dropdown.Item>\n\n                <Dropdown.Divider />\n\n                <Dropdown.Item className=\"fw-bold\">\n                  <FontAwesomeIcon icon={faSignOutAlt} className=\"text-danger me-2\" /> Logout\n                </Dropdown.Item>\n              </Dropdown.Menu>\n            </Dropdown>\n          </Nav>\n        </div>\n      </Container> */}\n    </Navbar>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}