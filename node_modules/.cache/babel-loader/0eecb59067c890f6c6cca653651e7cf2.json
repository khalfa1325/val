{"ast":null,"code":"import math from 'mathjs';\n\nclass SensorFusion {\n  constructor() {\n    let gpsWeight = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0.8;\n    let accelWeight = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.2;\n    this.gpsWeight = gpsWeight;\n    this.accelWeight = accelWeight;\n    this.gpsPosition = {\n      latitude: null,\n      longitude: null\n    };\n    this.accelPosition = {\n      latitude: null,\n      longitude: null\n    };\n  }\n\n  updateGPS(latitude, longitude) {\n    this.gpsPosition = {\n      latitude,\n      longitude\n    };\n  }\n\n  updateAccelerometer(accelX, accelY) {\n    // Convert accelerometer data to position adjustments (simple example)\n    const deltaLat = accelY * 0.00001;\n    const deltaLong = accelX * 0.00001;\n    this.accelPosition.latitude = this.gpsPosition.latitude + deltaLat;\n    this.accelPosition.longitude = this.gpsPosition.longitude + deltaLong;\n  }\n\n  fuse() {\n    // Simple weighted average fusion\n    const fusedLatitude = this.gpsWeight * this.gpsPosition.latitude + this.accelWeight * this.accelPosition.latitude;\n    const fusedLongitude = this.gpsWeight * this.gpsPosition.longitude + this.accelWeight * this.accelPosition.longitude;\n    return {\n      latitude: fusedLatitude,\n      longitude: fusedLongitude\n    };\n  }\n\n}\n\nexport default SensorFusion;","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/pages/AdjustPsotion/SensorFusion.js"],"names":["math","SensorFusion","constructor","gpsWeight","accelWeight","gpsPosition","latitude","longitude","accelPosition","updateGPS","updateAccelerometer","accelX","accelY","deltaLat","deltaLong","fuse","fusedLatitude","fusedLongitude"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,QAAjB;;AAEA,MAAMC,YAAN,CAAmB;AACjBC,EAAAA,WAAW,GAAqC;AAAA,QAApCC,SAAoC,uEAAxB,GAAwB;AAAA,QAAnBC,WAAmB,uEAAL,GAAK;AAC9C,SAAKD,SAAL,GAAiBA,SAAjB;AACA,SAAKC,WAAL,GAAmBA,WAAnB;AAEA,SAAKC,WAAL,GAAmB;AAAEC,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAAnB;AACA,SAAKC,aAAL,GAAqB;AAAEF,MAAAA,QAAQ,EAAE,IAAZ;AAAkBC,MAAAA,SAAS,EAAE;AAA7B,KAArB;AACD;;AAEDE,EAAAA,SAAS,CAACH,QAAD,EAAWC,SAAX,EAAsB;AAC7B,SAAKF,WAAL,GAAmB;AAAEC,MAAAA,QAAF;AAAYC,MAAAA;AAAZ,KAAnB;AACD;;AAEDG,EAAAA,mBAAmB,CAACC,MAAD,EAASC,MAAT,EAAiB;AAClC;AACA,UAAMC,QAAQ,GAAGD,MAAM,GAAG,OAA1B;AACA,UAAME,SAAS,GAAGH,MAAM,GAAG,OAA3B;AACA,SAAKH,aAAL,CAAmBF,QAAnB,GAA8B,KAAKD,WAAL,CAAiBC,QAAjB,GAA4BO,QAA1D;AACA,SAAKL,aAAL,CAAmBD,SAAnB,GAA+B,KAAKF,WAAL,CAAiBE,SAAjB,GAA6BO,SAA5D;AACD;;AAEDC,EAAAA,IAAI,GAAG;AACL;AACA,UAAMC,aAAa,GACjB,KAAKb,SAAL,GAAiB,KAAKE,WAAL,CAAiBC,QAAlC,GACA,KAAKF,WAAL,GAAmB,KAAKI,aAAL,CAAmBF,QAFxC;AAIA,UAAMW,cAAc,GAClB,KAAKd,SAAL,GAAiB,KAAKE,WAAL,CAAiBE,SAAlC,GACA,KAAKH,WAAL,GAAmB,KAAKI,aAAL,CAAmBD,SAFxC;AAIA,WAAO;AAAED,MAAAA,QAAQ,EAAEU,aAAZ;AAA2BT,MAAAA,SAAS,EAAEU;AAAtC,KAAP;AACD;;AAhCgB;;AAmCnB,eAAehB,YAAf","sourcesContent":["import math from 'mathjs';\n\nclass SensorFusion {\n  constructor(gpsWeight = 0.8, accelWeight = 0.2) {\n    this.gpsWeight = gpsWeight;\n    this.accelWeight = accelWeight;\n\n    this.gpsPosition = { latitude: null, longitude: null };\n    this.accelPosition = { latitude: null, longitude: null };\n  }\n\n  updateGPS(latitude, longitude) {\n    this.gpsPosition = { latitude, longitude };\n  }\n\n  updateAccelerometer(accelX, accelY) {\n    // Convert accelerometer data to position adjustments (simple example)\n    const deltaLat = accelY * 0.00001;\n    const deltaLong = accelX * 0.00001;\n    this.accelPosition.latitude = this.gpsPosition.latitude + deltaLat;\n    this.accelPosition.longitude = this.gpsPosition.longitude + deltaLong;\n  }\n\n  fuse() {\n    // Simple weighted average fusion\n    const fusedLatitude =\n      this.gpsWeight * this.gpsPosition.latitude +\n      this.accelWeight * this.accelPosition.latitude;\n\n    const fusedLongitude =\n      this.gpsWeight * this.gpsPosition.longitude +\n      this.accelWeight * this.accelPosition.longitude;\n\n    return { latitude: fusedLatitude, longitude: fusedLongitude };\n  }\n}\n\nexport default SensorFusion;"]},"metadata":{},"sourceType":"module"}