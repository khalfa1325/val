{"ast":null,"code":"import { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport PersonneApi from \"../features/listePersonne/MutationPersonne\";\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst rootReducer = combineReducers({\n  // users: userReducer,\n  // annonce: annonceReducer,\n  // comments: commentsReducer,\n  // categories: categoriesReducer,\n  // conversation: conversationReducer,\n  // ville: villeReducer,\n  // message: messageReducer,\n  // notification: notificationReducer,\n  // allNotification: allNotificationReducer,\n  // userAnnonce: userAnnonceReducer,\n  // socket: socketReducer,\n  [CryptApi.reducerPath]: CryptApi.reducer,\n  [AnnonceMutationUrl.reducerPath]: AnnonceMutationUrl.reducer,\n  [UserApi.reducerPath]: UserApi.reducer,\n  [PersonneApi.reducerPath]: PersonneApi.reducer // posts: postsReducer,  // auth: authetificationReducer,\n\n});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat(CryptApi.middleware, AnnonceMutationUrl.middleware, UserApi.middleware, PersonneApi.middleware)\n});\nsetupListeners(store.dispatch);\nexport const persistor = persistStore(store);","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/store/store.js"],"names":["combineReducers","configureStore","getDefaultMiddleware","setupListeners","persistStore","persistReducer","storage","PersonneApi","persistConfig","key","rootReducer","CryptApi","reducerPath","reducer","AnnonceMutationUrl","UserApi","persistedReducer","store","middleware","serializableCheck","concat","dispatch","persistor"],"mappings":"AACA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,kBAAtE;AAEA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,eAA7C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,OAAOC,WAAP,MAAwB,4CAAxB;AACA,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBH,EAAAA;AAFkB,CAAtB;AAIA,MAAMI,WAAW,GAAGV,eAAe,CAAC;AACjC;AACC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAACW,QAAQ,CAACC,WAAV,GAAwBD,QAAQ,CAACE,OAZD;AAahC,GAACC,kBAAkB,CAACF,WAApB,GAAkCE,kBAAkB,CAACD,OAbrB;AAchC,GAACE,OAAO,CAACH,WAAT,GAAuBG,OAAO,CAACF,OAdC;AAehC,GAACN,WAAW,CAACK,WAAb,GAA2BL,WAAW,CAACM,OAfP,CAgBhC;;AAhBgC,CAAD,CAAnC;AAmBA,MAAMG,gBAAgB,GAAGX,cAAc,CAACG,aAAD,EAAgBE,WAAhB,CAAvC;AAEA,OAAO,MAAMO,KAAK,GAAGhB,cAAc,CAAC;AAEhCY,EAAAA,OAAO,EAAEG,gBAFuB;AAIhCE,EAAAA,UAAU,EAAGhB,oBAAD,IACRA,oBAAoB,CAAC;AAAEiB,IAAAA,iBAAiB,EAAE;AAArB,GAAD,CAApB,CAAmDC,MAAnD,CACIT,QAAQ,CAACO,UADb,EAEIJ,kBAAkB,CAACI,UAFvB,EAGIH,OAAO,CAACG,UAHZ,EAIIX,WAAW,CAACW,UAJhB;AAL4B,CAAD,CAA5B;AAePf,cAAc,CAACc,KAAK,CAACI,QAAP,CAAd;AAGA,OAAO,MAAMC,SAAS,GAAGlB,YAAY,CAACa,KAAD,CAA9B","sourcesContent":["\nimport { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\n\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\n\nimport { persistStore, persistReducer } from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport PersonneApi from \"../features/listePersonne/MutationPersonne\";\nconst persistConfig = {\n    key: \"root\",\n    storage,\n}\nconst rootReducer = combineReducers({\n   // users: userReducer,\n    // annonce: annonceReducer,\n    // comments: commentsReducer,\n    // categories: categoriesReducer,\n    // conversation: conversationReducer,\n    // ville: villeReducer,\n    // message: messageReducer,\n    // notification: notificationReducer,\n    // allNotification: allNotificationReducer,\n    // userAnnonce: userAnnonceReducer,\n    // socket: socketReducer,\n    [CryptApi.reducerPath]: CryptApi.reducer,\n    [AnnonceMutationUrl.reducerPath]: AnnonceMutationUrl.reducer,\n    [UserApi.reducerPath]: UserApi.reducer,\n    [PersonneApi.reducerPath]: PersonneApi.reducer,\n    // posts: postsReducer,  // auth: authetificationReducer,\n   \n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n\n    reducer: persistedReducer,\n\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(\n            CryptApi.middleware,\n            AnnonceMutationUrl.middleware,\n            UserApi.middleware,\n            PersonneApi.middleware,\n        ),\n\n\n});\n\nsetupListeners(store.dispatch)\n\n\nexport const persistor = persistStore(store)\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}