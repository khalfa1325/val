{"ast":null,"code":"import { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\nimport { createStore } from '@reduxjs/toolkit';\nimport { persistStore, persistReducer } from 'reduxjs-toolkit-persist';\nimport storage from 'reduxjs-toolkit-persist/lib/storage'; // defaults to localStorage for web\n\nconst persistConfig = {\n  key: \"root\",\n  storage\n};\nconst rootReducer = combineReducers({});\nconst persistedReducer = persistReducer(persistConfig, rootReducer);\nexport const store = configureStore({\n  reducer: persistedReducer,\n  middleware: getDefaultMiddleware => getDefaultMiddleware({\n    serializableCheck: false\n  }).concat()\n});\nexport default (() => {\n  let store = createStore(persistedReducer);\n  let persistor = persistStore(store);\n  return {\n    store,\n    persistor\n  };\n});\nsetupListeners(store.dispatch); // export const persistor = persistStore(store)","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/src/store/store.js"],"names":["combineReducers","configureStore","getDefaultMiddleware","setupListeners","createStore","persistStore","persistReducer","storage","persistConfig","key","rootReducer","persistedReducer","store","reducer","middleware","serializableCheck","concat","persistor","dispatch"],"mappings":"AACA,SAASA,eAAT,EAA0BC,cAA1B,EAA0CC,oBAA1C,QAAsE,kBAAtE;AACA,SAASC,cAAT,QAA+B,6BAA/B;AAEA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,EAAuBC,cAAvB,QAA6C,yBAA7C;AACA,OAAOC,OAAP,MAAoB,qCAApB,C,CAA0D;;AAE1D,MAAMC,aAAa,GAAG;AAClBC,EAAAA,GAAG,EAAE,MADa;AAElBF,EAAAA;AAFkB,CAAtB;AAIA,MAAMG,WAAW,GAAGV,eAAe,CAAC,EAAD,CAAnC;AAIA,MAAMW,gBAAgB,GAAGL,cAAc,CAACE,aAAD,EAAgBE,WAAhB,CAAvC;AAEA,OAAO,MAAME,KAAK,GAAGX,cAAc,CAAC;AAEhCY,EAAAA,OAAO,EAAEF,gBAFuB;AAIhCG,EAAAA,UAAU,EAAGZ,oBAAD,IACRA,oBAAoB,CAAC;AAAEa,IAAAA,iBAAiB,EAAE;AAArB,GAAD,CAApB,CAAmDC,MAAnD;AAL4B,CAAD,CAA5B;AAaP,gBAAe,MAAM;AACjB,MAAIJ,KAAK,GAAGR,WAAW,CAACO,gBAAD,CAAvB;AACA,MAAIM,SAAS,GAAGZ,YAAY,CAACO,KAAD,CAA5B;AACA,SAAO;AAAEA,IAAAA,KAAF;AAASK,IAAAA;AAAT,GAAP;AACH,CAJD;AAMAd,cAAc,CAACS,KAAK,CAACM,QAAP,CAAd,C,CAGA","sourcesContent":["\nimport { combineReducers, configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport { setupListeners } from \"@reduxjs/toolkit/dist/query\";\n\nimport { createStore } from '@reduxjs/toolkit'\nimport { persistStore, persistReducer } from 'reduxjs-toolkit-persist'\nimport storage from 'reduxjs-toolkit-persist/lib/storage' // defaults to localStorage for web\n\nconst persistConfig = {\n    key: \"root\",\n    storage,\n}\nconst rootReducer = combineReducers({\n\n\n})\nconst persistedReducer = persistReducer(persistConfig, rootReducer)\n\nexport const store = configureStore({\n\n    reducer: persistedReducer,\n\n    middleware: (getDefaultMiddleware) =>\n        getDefaultMiddleware({ serializableCheck: false }).concat(\n\n\n        ),\n\n\n});\n\nexport default () => {\n    let store = createStore(persistedReducer)\n    let persistor = persistStore(store)\n    return { store, persistor }\n}\n\nsetupListeners(store.dispatch)\n\n\n// export const persistor = persistStore(store)\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}