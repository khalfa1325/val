{"ast":null,"code":"import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(Fraction, 'name', {\n    value: 'Fraction'\n  });\n  Fraction.prototype.constructor = Fraction;\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n\n\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n\n  return Fraction;\n}, {\n  isClass: true\n});","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/node_modules/mathjs/lib/esm/type/fraction/Fraction.js"],"names":["Fraction","factory","name","dependencies","createFractionClass","Object","defineProperty","value","prototype","constructor","type","isFraction","toJSON","mathjs","n","s","d","fromJSON","json","isClass"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,aAArB;AACA,SAASC,OAAT,QAAwB,wBAAxB;AACA,IAAIC,IAAI,GAAG,UAAX;AACA,IAAIC,YAAY,GAAG,EAAnB;AACA,OAAO,IAAIC,mBAAmB,GAAG,eAAeH,OAAO,CAACC,IAAD,EAAOC,YAAP,EAAqB,MAAM;AAChF;AACF;AACA;AACEE,EAAAA,MAAM,CAACC,cAAP,CAAsBN,QAAtB,EAAgC,MAAhC,EAAwC;AACtCO,IAAAA,KAAK,EAAE;AAD+B,GAAxC;AAGAP,EAAAA,QAAQ,CAACQ,SAAT,CAAmBC,WAAnB,GAAiCT,QAAjC;AACAA,EAAAA,QAAQ,CAACQ,SAAT,CAAmBE,IAAnB,GAA0B,UAA1B;AACAV,EAAAA,QAAQ,CAACQ,SAAT,CAAmBG,UAAnB,GAAgC,IAAhC;AAEA;AACF;AACA;AACA;AACA;;AACEX,EAAAA,QAAQ,CAACQ,SAAT,CAAmBI,MAAnB,GAA4B,YAAY;AACtC,WAAO;AACLC,MAAAA,MAAM,EAAE,UADH;AAELC,MAAAA,CAAC,EAAE,KAAKC,CAAL,GAAS,KAAKD,CAFZ;AAGLE,MAAAA,CAAC,EAAE,KAAKA;AAHH,KAAP;AAKD,GAND;AAQA;AACF;AACA;AACA;AACA;AACA;;;AACEhB,EAAAA,QAAQ,CAACiB,QAAT,GAAoB,UAAUC,IAAV,EAAgB;AAClC,WAAO,IAAIlB,QAAJ,CAAakB,IAAb,CAAP;AACD,GAFD;;AAGA,SAAOlB,QAAP;AACD,CAlCsD,EAkCpD;AACDmB,EAAAA,OAAO,EAAE;AADR,CAlCoD,CAAhD","sourcesContent":["import Fraction from 'fraction.js';\nimport { factory } from '../../utils/factory.js';\nvar name = 'Fraction';\nvar dependencies = [];\nexport var createFractionClass = /* #__PURE__ */factory(name, dependencies, () => {\n  /**\n   * Attach type information\n   */\n  Object.defineProperty(Fraction, 'name', {\n    value: 'Fraction'\n  });\n  Fraction.prototype.constructor = Fraction;\n  Fraction.prototype.type = 'Fraction';\n  Fraction.prototype.isFraction = true;\n\n  /**\n   * Get a JSON representation of a Fraction containing type information\n   * @returns {Object} Returns a JSON object structured as:\n   *                   `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   */\n  Fraction.prototype.toJSON = function () {\n    return {\n      mathjs: 'Fraction',\n      n: this.s * this.n,\n      d: this.d\n    };\n  };\n\n  /**\n   * Instantiate a Fraction from a JSON object\n   * @param {Object} json  a JSON object structured as:\n   *                       `{\"mathjs\": \"Fraction\", \"n\": 3, \"d\": 8}`\n   * @return {BigNumber}\n   */\n  Fraction.fromJSON = function (json) {\n    return new Fraction(json);\n  };\n  return Fraction;\n}, {\n  isClass: true\n});"]},"metadata":{},"sourceType":"module"}