{"ast":null,"code":"import { factory } from '../../utils/factory.js';\nexport var createUseMatrixForArrayScalar = /* #__PURE__ */factory('useMatrixForArrayScalar', ['typed', 'matrix'], _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  return {\n    'Array, number': typed.referTo('DenseMatrix, number', selfDn => (x, y) => selfDn(matrix(x), y).valueOf()),\n    'Array, BigNumber': typed.referTo('DenseMatrix, BigNumber', selfDB => (x, y) => selfDB(matrix(x), y).valueOf()),\n    'number, Array': typed.referTo('number, DenseMatrix', selfnD => (x, y) => selfnD(x, matrix(y)).valueOf()),\n    'BigNumber, Array': typed.referTo('BigNumber, DenseMatrix', selfBD => (x, y) => selfBD(x, matrix(y)).valueOf())\n  };\n});","map":{"version":3,"sources":["/home/radhouene/Bureau/admin/folder/VALENTANO/node_modules/mathjs/lib/esm/function/bitwise/useMatrixForArrayScalar.js"],"names":["factory","createUseMatrixForArrayScalar","_ref","typed","matrix","referTo","selfDn","x","y","valueOf","selfDB","selfnD","selfBD"],"mappings":"AAAA,SAASA,OAAT,QAAwB,wBAAxB;AACA,OAAO,IAAIC,6BAA6B,GAAG,eAAeD,OAAO,CAAC,yBAAD,EAA4B,CAAC,OAAD,EAAU,QAAV,CAA5B,EAAiDE,IAAI,IAAI;AACxH,MAAI;AACFC,IAAAA,KADE;AAEFC,IAAAA;AAFE,MAGAF,IAHJ;AAIA,SAAO;AACL,qBAAiBC,KAAK,CAACE,OAAN,CAAc,qBAAd,EAAqCC,MAAM,IAAI,CAACC,CAAD,EAAIC,CAAJ,KAAUF,MAAM,CAACF,MAAM,CAACG,CAAD,CAAP,EAAYC,CAAZ,CAAN,CAAqBC,OAArB,EAAzD,CADZ;AAEL,wBAAoBN,KAAK,CAACE,OAAN,CAAc,wBAAd,EAAwCK,MAAM,IAAI,CAACH,CAAD,EAAIC,CAAJ,KAAUE,MAAM,CAACN,MAAM,CAACG,CAAD,CAAP,EAAYC,CAAZ,CAAN,CAAqBC,OAArB,EAA5D,CAFf;AAGL,qBAAiBN,KAAK,CAACE,OAAN,CAAc,qBAAd,EAAqCM,MAAM,IAAI,CAACJ,CAAD,EAAIC,CAAJ,KAAUG,MAAM,CAACJ,CAAD,EAAIH,MAAM,CAACI,CAAD,CAAV,CAAN,CAAqBC,OAArB,EAAzD,CAHZ;AAIL,wBAAoBN,KAAK,CAACE,OAAN,CAAc,wBAAd,EAAwCO,MAAM,IAAI,CAACL,CAAD,EAAIC,CAAJ,KAAUI,MAAM,CAACL,CAAD,EAAIH,MAAM,CAACI,CAAD,CAAV,CAAN,CAAqBC,OAArB,EAA5D;AAJf,GAAP;AAMD,CAXgE,CAA1D","sourcesContent":["import { factory } from '../../utils/factory.js';\nexport var createUseMatrixForArrayScalar = /* #__PURE__ */factory('useMatrixForArrayScalar', ['typed', 'matrix'], _ref => {\n  var {\n    typed,\n    matrix\n  } = _ref;\n  return {\n    'Array, number': typed.referTo('DenseMatrix, number', selfDn => (x, y) => selfDn(matrix(x), y).valueOf()),\n    'Array, BigNumber': typed.referTo('DenseMatrix, BigNumber', selfDB => (x, y) => selfDB(matrix(x), y).valueOf()),\n    'number, Array': typed.referTo('number, DenseMatrix', selfnD => (x, y) => selfnD(x, matrix(y)).valueOf()),\n    'BigNumber, Array': typed.referTo('BigNumber, DenseMatrix', selfBD => (x, y) => selfBD(x, matrix(y)).valueOf())\n  };\n});"]},"metadata":{},"sourceType":"module"}